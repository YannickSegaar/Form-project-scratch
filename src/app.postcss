/* Write your global styles here, in PostCSS syntax */

@tailwind base;
@tailwind components;
@tailwind utilities;

html, body { @apply h-full overflow-hidden; }


@layer base {
	:root {
		--background: 0 0% 100%;
		--foreground: 240 10% 3.9%;

		--muted: 240 4.8% 95.9%;
		--muted-foreground: 240 3.8% 46.1%;

		--popover: 0 0% 100%;
		--popover-foreground: 240 10% 3.9%;

		--card: 0 0% 100%;
		--card-foreground: 240 10% 3.9%;

		--border: 240 5.9% 90%;
		--input: 240 5.9% 90%;

		--primary: 240 5.9% 10%;
		--primary-foreground: 0 0% 98%;

		--secondary: 240 4.8% 95.9%;
		--secondary-foreground: 240 5.9% 10%;

		--accent: 240 4.8% 95.9%;
		--accent-foreground: 240 5.9% 10%;

		--destructive: 0 72.2% 50.6%;
		--destructive-foreground: 0 0% 98%;

		--ring: 240 10% 3.9%;

		--radius: 0.5rem;
	}

	.dark {
		--background: 240 10% 3.9%;
		--foreground: 0 0% 98%;

		--muted: 240 3.7% 15.9%;
		--muted-foreground: 240 5% 64.9%;

		--popover: 240 10% 3.9%;
		--popover-foreground: 0 0% 98%;

		--card: 240 10% 3.9%;
		--card-foreground: 0 0% 98%;

		--border: 240 3.7% 15.9%;
		--input: 240 3.7% 15.9%;

		--primary: 0 0% 98%;
		--primary-foreground: 240 5.9% 10%;

		--secondary: 240 3.7% 15.9%;
		--secondary-foreground: 0 0% 98%;

		--accent: 240 3.7% 15.9%;
		--accent-foreground: 0 0% 98%;

		--destructive: 0 62.8% 30.6%;
		--destructive-foreground: 0 0% 98%;

		--ring: 240 4.9% 83.9%;
	}
}

@layer components {
	.border-border {
	  border: 1px solid;
	}
  }

/* YRS: Hieronder staan CSS styling voor icons die gebruikt worden */
@layer components {
	.icon {
		@apply inline-flex align-middle justify-center; /* Existing flex and alignment styles */
		font-variation-settings:
			'FILL' 0,
			'wght' 400,
			'GRAD' 0,
			'opsz' 24;
		color: var(--primary-foreground); /* Adjust color as needed */
		font-size: 1.25rem; /* Adjust size as needed */
		margin-right: 0.5rem; /* Default space between icon and text */
		vertical-align: middle; /* Vertically aligns inline or inline-block elements */
	}

	.icon-large {
		@apply .icon;
		font-size: 2rem; /* Larger size */
	}

	.icon-primary {
		@apply .icon;
		color: var(--primary); /* Use primary color */
	}

	.icon-secondary {
		@apply .icon;
		color: var(--secondary); /* Use secondary color */
	}

	/* Utility classes for individual margin adjustments */
	.icon-margin-right {
		margin-right: 0.5rem; /* Adjust right margin, can be overridden per use case */
	}

	.icon-margin-left {
		margin-left: 0.5rem; /* Adjust left margin */
	}

	.icon-margin-top {
		margin-top: 0.5rem; /* Adjust top margin */
	}

	.icon-margin-bottom {
		margin-bottom: 0.5rem; /* Adjust bottom margin */
	}

	/* Utility class for bottom alignment */
	.icon-align-bottom {
		vertical-align: bottom; /* Align the bottom of the icon with the text baseline */
	}

	.hovercard-icon {
		@apply inline-block align-middle; /* Inline-block for icons next to text */
		font-variation-settings:
			'FILL' 0,
			'wght' 400,
			'GRAD' 0,
			'opsz' 24;
		color: #015257; /* You can change this per icon if needed */
		font-size: 1rem; /* Default size, adjust as needed */
		margin-right: 0.5rem; /* Space between icon and text */
		vertical-align: middle; /* Aligns with text */
	}

	/* More specific or responsive utility classes can be added here */
}

/* YRS: SELECT DROPDOWN  */
/* New class for left-aligning text inside Select.Value */
.select-value-text-left {
	@apply text-left; /* Aligns text to the left */
}

/* YRS: Styling zodat select dropdown background niet meer doorzichtig is */

.select-background {
    background-color: white;
}

/* YRS: Styling voor font color van de placeholder select value form component */
.select-placeholder::placeholder {
	color: #ffff00; /* Replace with the color you want */
}

/* If you want to add specific margins, you can also create utility classes for that */
.select-value-margin {
	margin-left: 1rem; /* Example: adjust the left margin */
	/* Add margin-top, margin-right, and margin-bottom if needed */
}

/* YRS: PLACEHOLDER STYLING */

/* Placeholder Styles */
.placeholder-custom::placeholder {
	/* Target the placeholder */
	color: #9ca3af; /* YRS: aanpassen van placeholder kleur werkt niet, de font size lukt wel! */
	font-size: 0.75rem; /* Default size, adjust as needed */
}

.placeholder-custom:focus::placeholder {
	/* Change placeholder on focus */
	color: #6b7280; /* Darker gray when the input is focused */
}

/* YRS: FORM FIELD STYLING voor ruimte te creeren tussen elk form component */
.form-field {
	margin-bottom: 5px; /* Adjust as needed */
	margin-top: 5px; /* Adjust as needed */
	margin-right: 10px;
	flex: 1;
}
/* YRS: BUTTON STYLING */
.form-button {
	padding: 10px 20px; /* Adjust dimensions as needed */
	border-radius: 5px; /* Adjust rounding as needed */
	background: linear-gradient(to right, #ffd700, #ffa500); /* Adjust gradient colors as needed */
	box-shadow: 0 0 10px rgba(255, 165, 0, 0.5); /* Adjust glow color and intensity as needed */
	color: #015257; /* Adjust text color as needed */
	font-weight: bold; /* Adjust font weight as needed */
}
.form-button span {
	color: #ffffff; /* Adjust text color inside the button as needed */
}

/* YRS: De special-button styling wordt gebruikt voor de "Verzenden" button aan het einde van de form  */
.special-button {
	background: #015257; /* Replace with the color you want */
	box-shadow: 0 0 10px rgba(#ffffff, 0.5); /* Replace newColor with the color you want */
	border-radius: 50px; /* Adjust rounding as needed */
	margin-bottom: 30px; /* Adjust as needed */
	margin-top: 10px; /* Adjust as needed */
	height: 4rem; /* Adjust as needed */
	color: #ffffff; /* Replace with the color you want */
	font-weight: bold; /* Adjust as needed */
	font-size: 20px; /* Adjust as needed */
	position: relative; /* Adjust as needed */
}

.special-button span {
	color: #ffffff; /* Replace with the color you want */
	font-weight: bold; /* Adjust as needed */
}

/* YRS: Logo styling inside button voor Protium logo aan rechterzijde van de "Verzenden" tekst */
.logo-inside-special-button-right {
	height: 60%; /* Adjust as needed */
	width: auto; /* Keeps the aspect ratio */
	position: absolute;
	right: 20px; /* Adjust as needed */
	top: 50%;
	transform: translateY(-50%); /* Centers the logo vertically */
}

/* YRS: Logo styling inside button voor Protium logo aan linkerzijde van de "Verzenden" tekst */
.logo-inside-special-button-left {
	height: 60%; /* Adjust as needed */
	width: auto; /* Keeps the aspect ratio */
	position: absolute;
	left: 20px; /* Adjust as needed */
	top: 50%;
	transform: translateY(-50%); /* Centers the logo vertically */
}

/* YRS: Styling voor spinner animation na submit knop */
.spinner {
	display: block; /* Ensures the spinner is block-level for margin utilities to take effect */
	margin: 2rem auto; /* Centers the spinner horizontally with a top and bottom margin */
	width: 50px; /* Adjust the width as needed */
	height: 50px; /* Adjust the height as needed */
	border: 4px solid rgba(255, 255, 255, 0.2); /* Light grey border */
	border-radius: 50%; /* Makes it circular */
	border-top-color: #fff; /* Top border color */
	animation: spin 1s infinite linear; /* Spin animation */
}

/* YRS: Toevoegen van een succes banner nadat form gesubmit is */
.success-banner {
	padding: 10px;
	background-color: #84a98c; /* Background color */
	color: white;
	text-align: center;
	margin-top: 0px; /* Add some space above the banner */
	margin-bottom: 40px; /* Add some space below the banner */
	border-radius: 20px; /* Adjust rounding as needed */
	font-weight: bold; /* Adjust font weight as needed */
	/* Add more styling as needed */
}

/* ////////////////////// YRS: PLAYGROUND FORM COMPONENT STYLES ////////////////////////////// */

/* YRS: Styling voor flexbox container die dient als parent container */
.parent-flex-container {
	/* Add styles for the parent container (marketing emails) */
	/* Example: */
	display: flex;
	flex-direction: column; /* stack children vertically */
	justify-content: space-between; /* push children to start and end of container */
	gap: 10px; /* space between children */
	height: 100%; /* ensure the container takes up full height needed to allow justification */
	border: 1px solid #ccc; /* example border */
	border-radius: 8px; /* rounded corners */
	padding: 10px; /* spacing inside */
	/* margin-bottom: 16px; space between this and other elements */
}

/* YRS: Styling voor flexbox container die dient als child container */

.child-flex-container {
	display: flex;
	flex-direction: row; /* Mimics 'flex-row': Children are laid out horizontally */
	justify-content: space-between; /* Mimics 'justify-between': Distributes items evenly with the first item at the start and the last item at the end */
	align-items: center; /* Mimics 'items-center': Vertically aligns items in the center */
	border-radius: 0.5rem; /* Mimics 'rounded-lg': Applies large rounded corners */
	/* border: 1px solid #e5e7eb; Mimics 'border': Adds a light border. Tailwind's default border color is a light gray, adjust as needed */
	padding: 1rem; /* Mimics 'p-4': Adds padding of 1rem on all sides */
}

.locked-field-container {
	/* Styles for the child container (locked field) */
	/* Example: */
	/* display: flex;
  align-items: center; */
	align-self: flex-start; /* align this child to the start of the cross axis */
	margin-top: auto; /* push the child container to the bottom */
	width: 100%; /* ensure the child container takes up full width of the parent */
}

.locked-input {
	/* Styles for the locked input */
	/* Example: */
	flex-grow: 1; /* take up remaining space */
	padding: 8px; /* spacing inside */
	margin-right: 8px; /* space between input and lock icon */
	border: 1px solid #ccc; /* example border */
	border-radius: 4px; /* rounded corners */
	background-color: #eee; /* muted background */
}

.lock-icon {
	/* Styles for the lock icon */
	/* Example: */
	font-size: 24px; /* icon size */
	margin-right: 8px; /* space between icon and input */
}

.description {
	/* Styles for descriptions */
	/* Example: */
	font-size: 14px;
	color: #666; /* muted text color */
}

/* Add additional styles as needed */

/* YRS: Updated CSS styling for hovercard container */
.hovercard-container {
	display: block; /* Ensures the hovercard is block-level for margin utilities to take effect */
	position: relative; /* Keeps existing positioning */
	bottom: 0; /* Keeps at the bottom */
	right: 16px; /* Adds space to the right, adjust as needed */
	padding: 10px; /* Existing padding */
	margin-top: 50px; /* Creates a gap between the hovercard and the app bar */
	width: 300px; /* Updated width as suggested */
	height: auto; /* Set height to auto to adjust to content */
	/* Additional styles for positioning the content below the trigger */
	transform: translateY(100%); /* Positions the hovercard below the trigger */
	background-color: #cce3de; /* Change this to your desired color */
	/* Optional: Use a larger value if the hovercard needs to be lower */
}

/* Additional styles to ensure that the hovercard content does not go off-screen */
:host {
	--radix-hover-card-content-transform-origin: var(--radix-hover-card-arrow-transform-origin, center top);
	transform: translate(0, 60px) !important;
}

/* This class can be added to the favicon trigger to adjust the margin */
.favicon-margin {
	margin-right: 50px; /* Adjust this value to increase the right margin of the favicon */
}

/* YRS: CSS styling voor tooltip icon */
/* Style for the tooltip icon */
.tooltip-icon {
	font-size: 15px; /* Change this value to increase or decrease the icon size */
	color: #666; /* Set your desired color */
	vertical-align: middle; /* Aligns the icon with the middle of the text line */
	cursor: help; /* Shows a help cursor when hovered */
	margin-left: 4px; /* Adjust spacing to the left of the icon if needed */
	margin-bottom: 2px; /* Adjust spacing to the bottom of the icon if needed */
}

/* New style for the tooltip content */
.tooltip-content {
	font-size: 14px;
	color: #333333;
	background-color: #a74141;
	padding: 8px;
	border-radius: 4px;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
	max-width: 300px;
	z-index: 10;
	position: absolute; /* This positions the tooltip content absolutely within its container */
	top: 100%; /* Adjust as necessary to position below the trigger */
	left: 50%;
	transform: translateX(-50%);
	display: none; /* Hide the tooltip content by default */
}

/* Position the container of the tooltip relative to the trigger */
.tooltip-trigger-container {
	position: relative; /* This container must be positioned relatively */
	display: inline-block; /* Adjust as necessary */
}

/* Additional styles for visibility and positioning */
.tooltip-content::before {
	content: '';
	width: 0;
	height: 0;
	border-left: 5px solid transparent;
	border-right: 5px solid transparent;
	border-bottom: 5px solid #333333; /* Match with the background color of the tooltip */
	position: absolute;
	top: -5px;
	left: 50%;
	transform: translateX(-50%);
}

/* Show the tooltip content when the trigger is hovered */
.tooltip-trigger-container:hover .tooltip-content {
	display: block !important; /* Force the tooltip to show on hover */
}

/* YRS: CSS styling voor logo in app bar in +layout.svelte code */

/* Class to style the company logo within the AppBar */
.logo-in-appbar {
	/* Adjust height as needed to fit your AppBar */
	height: 3rem; /* Example height - adjust as needed */
	/* Set margin as needed */
	margin: auto; /* Centers the logo vertically and horizontally */
	display: block; /* Makes it a block-level element to respect margin: auto */
  }
  
  /* You can use media queries if you need responsiveness */
  @media (max-width: 640px) {
	.logo-in-appbar {
	  height: 2rem; /* Smaller height for smaller screens */
	}
  }

  /* YRS: CSS Styling voor Calendly embedded Modal */

    .modal-base {
        position: relative;
        width: 40vw; /* Set width as needed 50vw */
        max-width: 120vw;
        height: 100vh; /* Adjust height as needed */
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        overflow: hidden;
    }
    .modal-close-button {
        position: absolute;
        top: 0;
        right: 0;
        border: none;
        background: none;
        font-size: 24px;
        cursor: pointer;
    }
    .calendly-iframe {
        width: 100%;
        height: 100%;
    }


  /* YRS: Styling voor form-container: */

.form-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding: 20px;
  margin: auto;
  max-width: 800px; /* Adjust based on your preference */
  background-color: #f9f9f9; /* Light background to distinguish the form */
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Adds depth to the form */
  transition: all 0.3s ease; /* Smooth transition for any changes */
}

.first-step-fields-container {
  display: flex; /* This will lay out its children in a row */
  justify-content: space-between; /* This will distribute space between the children */
  align-items: center; /* This will vertically align the children in the middle */
}

.form-field:last-child {
  margin-right: 0; /* Ensures that the last field doesn't have a margin on the right */
}


/* Add responsiveness */
@media (max-width: 900px) {
  .form-container {
    width: 90%; /* Slightly smaller on smaller screens */
  }
}

@media (max-width: 600px) {
  .form-container {
    flex-direction: column;
    padding: 15px;
    width: 95%; /* More padding and adjusts to screen size on very small devices */
  }
}

  /* YRS: Styling voor tweede stap van form container: */

  .step-2-container {
  display: grid;
  grid-template-rows: auto auto auto; /* Creates three row tracks */
  gap: 20px; /* Space between grid items */
}

.toggle-switch-container {
  /* This will center the toggle switch form field in its grid row */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* For fields that should be side by side */
.horizontal-flex {
  display: flex;
  justify-content: space-between;
}

.form-field:last-child {
  margin-right: 0; /* No margin on the right for the last child */
}


/* YRS: CSS Styles voor stap 3: */

/* Container for the entire step to manage the layout */
.step-3-container {
  display: grid;
  gap: 20px; /* Space between grid items */
  grid-template-columns: 1fr; /* Single column layout */
}

/* Class for side-by-side fields */
.flex-row {
  display: flex;
  gap: 20px; /* Space between flex items */
}

/* Ensure that each field takes up only the necessary width */
.flex-field {
  flex: 1;
}

/* Full width for single fields and textarea */
.full-width {
  width: 100%;
}

/* Style for your buttons, adjust as necessary */
.button-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* Adjust the size of the buttons if necessary */
.form-button {
  flex-grow: 1;
  margin: 10px;
}

/* Style for privacy policy label and checkbox */
.privacy-policy {
  display: flex;
  align-items: center;
  gap: 10px; /* Space between checkbox and label */
}

/* Style for the success banner */
.success-banner {
  padding: 20px;
  background-color: #d4edda;
  color: #155724;
  border-radius: 5px;
  margin-top: 20px;
  text-align: center;
}

/* YRS: Styling classes voor stepper-complete button */

/* Base styling for the "Complete" button, similar to ".special-button" */
.stepper-complete-button {
  background: #015257; /* Your button color */
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5); /* Your desired shadow effect */
  border-radius: 50px; /* Rounded corners */
  margin-bottom: 30px; /* Space at the bottom */
  margin-top: 10px; /* Space at the top */
  height: 4rem; /* Button height */
  color: #ffffff; /* Text color */
  font-weight: bold; /* Text weight */
  font-size: 20px; /* Text size */
  position: relative; /* For positioning the logos absolutely */
  display: none; /* To center the content and logos */
  align-items: center; /* Center items vertically */
  justify-content: center; /* Center items horizontally */
  gap: 40px; /* Space between logos and text, adjust as needed */
  padding: 0 60px; /* Added padding to account for the space the logos will occupy */
}

/* Styling for the company logos inside the button */
.stepper-complete-logo {
  height: 60%; /* Logo height relative to the button size */
  width: auto; /* Maintain the aspect ratio */
  position: absolute;
  top: 50%; /* Center vertically */
  transform: translateY(-50%);
}

/* Position the left logo */
.stepper-complete-logo.left {
  left: 20px; /* Distance from the left edge */
}

/* Position the right logo */
.stepper-complete-logo.right {
  right: 20px; /* Distance from the right edge */
}

/* YRS: Styling class zodat error messages in rood zijn */
.error-message {
    color: #ef233c;
}

/* YRS: Styling zodat input field background niet meer doorzichtig is (gebruik deze ook voor text area en checkbox)*/

.select-input-field {
    background-color: white;
}

/* YRS: Styling classes voor toggle switch */

[data-switch-root][data-state=checked] {
    background-color: #015256; /* Change to the color you want for the checked state */
}

[data-switch-root][data-state=unchecked] {
    background-color: #dee2e6; /* Change to the color you want for the unchecked state */
}

[data-switch-thumb] {
    background-color: white; /* Change to the color you want for the thumb */
}

/* YRS: Styling voor stepper badges van Skeleton (stap 1, stap 2, etc. kleur) */

.badge-custom {
    background-color: #015256; /* Replace with your desired color */
	color: #ffffff; /* Your desired badge text color */
}

/* YRS: Styling voor active stepper badge */

.badge-active {
    background-color: #fff59d; /* Replace with your desired color for active badge */
    color: #000000; /* Replace with your desired text color for active badge */
    font-size: 1.0em; /* Increase the size of the badge */
}

/* YRS: Styling classes voor Stepper Next button */

/* Base styling for the "Next" button */
.stepper-next-button {
  background: #fff59d; /* Your button color */
  color: #000000; /* Text color */
}

/* YRS: Styling classes voor Step regionHeader */

.region-header-custom {
    background-color: #015256; /* Replace with your desired background color */
    color: #ffffff; /* Replace with your desired text color */
    font-size: 1em; /* Replace with your desired font size */
    padding: 5px 20px; /* 10px padding for top and bottom, 20px padding for left and right */
    border-radius: 0px; /* Optional: add some rounding to the corners */
}


/* YRS: Styling zodat ik Stepper kan stylen, zoals background en/of een border rondom Stepper kan maken */

.stepper-custom {
    border: 0px solid #015256; /* Change '2px' to control the thickness and '#000000' to control the color */
	/* YRS: Ik heb voor nu deze border rondom de stepper weg gelaten, want ik weet niet of ik het mooi vind */
	background-color: #e5e6e4; /* Replace with your desired background color */
    /* width: 500px; */ /* Replace with your desired width */
    /* height: auto; */ /* Replace with your desired height, 'auto' will adjust the height based on the content */
    /* Add your other styles here */
}

/* YRS: Styling zodat ik een App Bar kan plaatsen boven mijn Stepper form, zoals ik ook al een App Bar heb in mijn 
+layout.svelte code, maar dan voor een App Bar in mijn form zelf */

.appbar-custom {
    background-color: ##75c8d8; /* Replace with your desired background color */
    font-size: 16px; /* Replace with your desired font size */
    color: #ffffff; /* Replace with your desired font color */
    width: 100%; /* This will make the AppBar the same width as its parent container */
}